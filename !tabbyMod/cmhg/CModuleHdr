;
; A header description for an example of a module written in C
; - for pedagogic purposes only!
;
; It will respond to SWIs in the range 0x88000 + [0..63], or as you
; otherwise specify in the 'swi-chunk-base-number:' field below.
;
; It also responds to '*' commands tm1 and tm2. Tm1 is intended to take a list
; of 0 or more string arguments, and tm2 a single integer; but you can type
; anything at either. Try also *Help TM1 and *Help TM2.
;
; To build this module, you must first assemble the module header and create
; the C header file for the module header using cmhg -
;     use the command "cmhg cmhg.CModuleHdr o.cmodulehdr h.cmodulehdr".
; Then you need to use 'cc -c -zM c.cmodule' to build the module body.
; Finally link the objects with the Shared C Library stubs -
;     'link -o cmodule -m o.cmodule o.cmodulehdr c:o.stubs' does the trick.
;
; To install the module, just type 'cmodule'.
;
; To test it, try typing various variants of tm1 and tm2 at the '*' prompt.
; Try also the following from BASIC:
; > SYS &88000                 -- should give a message and an error
; > SYS &88001                 -- should give a 'Mistake' message (divide by 0)
; > SYS &88002                 -- should just give a message
; >*foo                        -- any unknown command will do
; > SYS &88003                 -- should give a message saying 1 unknown
;                                 command since last SWI call
; > QUIT                       -- out of BASIC
;
; Good Luck!
;

help-string:  Test_C_Module 0.00

title-string: TestCModule

initialisation-code: tm_initialise

module-is-runnable:

swi-chunk-base-number: 0x88000

swi-handler-code: tm_swi

service-call-handler: tm_service 4 6 8

command-keyword-table: tm_cmd

   tabbyCapture(min-args:0, max-args:2,
      help-text: "Syntax\t tabbyCapture <handle> <idx>\n")



